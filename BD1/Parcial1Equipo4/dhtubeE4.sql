-- MySQL Script generated by MySQL Workbench
-- lun 30 ago 2021 17:19:38 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dhtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dhtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dhtube` ;
USE `dhtube` ;

-- -----------------------------------------------------
-- Table `dhtube`.`avatar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`avatar` (
  `idAvatar` INT NOT NULL,
  `nombreAvatar` VARCHAR(45) NULL,
  `urlAvatar` VARCHAR(200) NULL,
  PRIMARY KEY (`idAvatar`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`usuario` (
  `idUsuario` INT NOT NULL,
  `email` VARCHAR(70) NULL,
  `password` VARCHAR(45) NULL,
  `nombreUsuario` VARCHAR(45) NULL,
  `fechaNacimiento` DATE NULL,
  `pais` VARCHAR(45) NULL,
  `codigoPostal` VARCHAR(20) NULL,
  `avatar_idAvatar` INT NOT NULL,
  PRIMARY KEY (`idUsuario`, `avatar_idAvatar`),
  INDEX `fk_usuario_avatar1_idx` (`avatar_idAvatar` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_avatar1`
    FOREIGN KEY (`avatar_idAvatar`)
    REFERENCES `dhtube`.`avatar` (`idAvatar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`visibilidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`visibilidad` (
  `idVisibilidad` INT NOT NULL,
  `tipoVisibilidad` VARCHAR(15) NULL,
  PRIMARY KEY (`idVisibilidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`video` (
  `idVideo` INT NOT NULL,
  `tituloVideo` VARCHAR(45) NULL,
  `descripcion` TEXT NULL,
  `tamanioVideo` FLOAT NULL,
  `nombreArchivoVideo` VARCHAR(70) NULL,
  `duracionSeg` INT NULL,
  `imagen` BLOB NULL,
  `reproducciones` INT NULL,
  `fechaCreacion` DATETIME NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `usuario_idUsuario` INT NOT NULL,
  `visibilidad_idVisibilidad` INT NOT NULL,
  PRIMARY KEY (`idVideo`, `usuario_idUsuario`, `visibilidad_idVisibilidad`),
  INDEX `fk_video_usuario_idx` (`usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_video_visibilidad1_idx` (`visibilidad_idVisibilidad` ASC) VISIBLE,
  CONSTRAINT `fk_video_usuario`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `dhtube`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_visibilidad1`
    FOREIGN KEY (`visibilidad_idVisibilidad`)
    REFERENCES `dhtube`.`visibilidad` (`idVisibilidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`canal` (
  `idCanal` INT NOT NULL,
  `nombreCanal` VARCHAR(45) NULL,
  `descripcion` TEXT NULL,
  `fechaCreacion` DATE NULL,
  `usuario_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idCanal`, `usuario_idUsuario`),
  INDEX `fk_canal_usuario1_idx` (`usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_canal_usuario1`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `dhtube`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`playlist` (
  `idPlaylist` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `fechaCreacion` DATE NULL,
  `visibilidad_idVisibilidad` INT NOT NULL,
  `usuario_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idPlaylist`, `visibilidad_idVisibilidad`, `usuario_idUsuario`),
  INDEX `fk_playlist_visibilidad1_idx` (`visibilidad_idVisibilidad` ASC) VISIBLE,
  INDEX `fk_playlist_usuario1_idx` (`usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_visibilidad1`
    FOREIGN KEY (`visibilidad_idVisibilidad`)
    REFERENCES `dhtube`.`visibilidad` (`idVisibilidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_usuario1`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `dhtube`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`reaccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`reaccion` (
  `idReaccion` INT NOT NULL,
  `nombreReaccion` VARCHAR(45) NULL,
  `fechaReaccion` DATETIME NULL,
  PRIMARY KEY (`idReaccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`etiqueta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`etiqueta` (
  `idEtiqueta` INT NOT NULL,
  `nombre` VARCHAR(20) NULL,
  PRIMARY KEY (`idEtiqueta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`etiqueta_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`etiqueta_has_video` (
  `idEtiquetaVideo` INT NOT NULL,
  `etiqueta_idEtiqueta` INT NOT NULL,
  `video_idVideo` INT NOT NULL,
  PRIMARY KEY (`idEtiquetaVideo`, `etiqueta_idEtiqueta`, `video_idVideo`),
  INDEX `fk_etiqueta_has_video_video1_idx` (`video_idVideo` ASC) VISIBLE,
  INDEX `fk_etiqueta_has_video_etiqueta1_idx` (`etiqueta_idEtiqueta` ASC) VISIBLE,
  CONSTRAINT `fk_etiqueta_has_video_etiqueta1`
    FOREIGN KEY (`etiqueta_idEtiqueta`)
    REFERENCES `dhtube`.`etiqueta` (`idEtiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_etiqueta_has_video_video1`
    FOREIGN KEY (`video_idVideo`)
    REFERENCES `dhtube`.`video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`playlist_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`playlist_has_video` (
  `idPlayHasVideo` INT NOT NULL,
  `playlist_idPlaylist` INT NOT NULL,
  `idPlaylistVideo` INT NOT NULL,
  PRIMARY KEY (`playlist_idPlaylist`, `idPlaylistVideo`, `idPlayHasVideo`),
  INDEX `fk_playlist_has_video_video1_idx` (`idPlaylistVideo` ASC) VISIBLE,
  INDEX `fk_playlist_has_video_playlist1_idx` (`playlist_idPlaylist` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_has_video_playlist1`
    FOREIGN KEY (`playlist_idPlaylist`)
    REFERENCES `dhtube`.`playlist` (`idPlaylist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_has_video_video1`
    FOREIGN KEY (`idPlaylistVideo`)
    REFERENCES `dhtube`.`video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dhtube`.`reaccionUsuarioVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dhtube`.`reaccionUsuarioVideo` (
  `idReaccionUsuarioVideo` INT NOT NULL,
  `reaccion_idReaccion` INT NOT NULL,
  `usuario_idUsuario` INT NOT NULL,
  `video_idVideo` INT NOT NULL,
  PRIMARY KEY (`reaccion_idReaccion`, `usuario_idUsuario`, `video_idVideo`, `idReaccionUsuarioVideo`),
  INDEX `fk_usuario_has_video_video1_idx` (`video_idVideo` ASC) VISIBLE,
  INDEX `fk_usuario_has_video_usuario1_idx` (`usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_usuario_has_video_reaccion1_idx` (`reaccion_idReaccion` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_has_video_usuario1`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `dhtube`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_video_video1`
    FOREIGN KEY (`video_idVideo`)
    REFERENCES `dhtube`.`video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_video_reaccion1`
    FOREIGN KEY (`reaccion_idReaccion`)
    REFERENCES `dhtube`.`reaccion` (`idReaccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
